@{    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    var grid = Html.DevExpress().GridView(
        settings =>
        {
            settings.Name = "gvEditing";
            settings.KeyFieldName = "BranchID";
            settings.CallbackRouteValues = new { Controller = "Branch", Action = "GridViewPartialView" };
            settings.CustomActionRouteValues = new { Controller = "Branch", Action = "ChangeEditModePartial" };
            settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Branch", Action = "EditModesAddNewPartial" };
            settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Branch", Action = "EditModesUpdatePartial" };
            settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Branch", Action = "EditModesDeletePartial" };
            settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
            settings.SettingsBehavior.ConfirmDelete = true;
            settings.Width = Unit.Percentage(100);

            settings.Styles.Header.Wrap = DefaultBoolean.True;
            settings.SettingsPager.EnableAdaptivity = true;
            settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
            settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 700;

            settings.SettingsPager.Visible = true;
            settings.SettingsSearchPanel.Visible = true;
            settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;
            settings.Settings.ShowGroupPanel = true;
            settings.Settings.ShowFilterRow = true;
            settings.SettingsBehavior.AllowSelectByRowClick = true;

            settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
            settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
            settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
            settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
            settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
            
            settings.Columns.Add(column =>
            {
                column.Caption = "#";
                column.SetDataItemTemplateContent(c =>
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink("Edit", "Edit", new { id = DataBinder.Eval(c.DataItem, "BranchID") }) + "&nbsp;" +
                        Html.ActionLink("Delete", "Delete", new { id = DataBinder.Eval(c.DataItem, "BranchID") })
                    );
                });
                column.SetHeaderTemplateContent(c =>
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink("New", "Create").ToHtmlString()
                    );
                });
                column.Settings.AllowDragDrop = DefaultBoolean.False;
                column.Settings.AllowSort = DefaultBoolean.False;
                column.Width = 70;
            });
            
            settings.Columns.Add("NameMon");
            settings.Columns.Add("NameEng");

        });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()