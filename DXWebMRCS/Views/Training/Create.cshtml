@model DXWebMRCS.Models.Training

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_SysLayout.cshtml";
}

<div class="rigsht_col" role="main">
    <div class="">
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                @using (Html.BeginForm("Create", "Training", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Training</h4>
                        <hr />
                        @Html.ValidationSummary(true)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.DropDownList("Type", new List<SelectListItem> { new SelectListItem { Text = "Үйл ажилгаа", Value = "1" }, new SelectListItem { Text = "Явагдах сургалт", Value = "2" } })
                                @Html.ValidationMessageFor(model => model.Type)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NameMon, new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.NameMon, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NameMon)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NameEng, new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.NameEng, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NameEng)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ContentMon, new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.ContentMon, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ContentMon)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ContentEng, new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.ContentEng, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ContentEng)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Where, new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.Where, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Where)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.When, new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.When, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.When)
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Duration, new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.Duration, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Duration)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                <input type="file" name="ImageFile" required onchange="show(this)">
                                <img id="user_img" height="100" width="90" />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-9">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>

            </div>
        </div>

    </div>
</div>
<script type="text/javascript">
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
</script>  